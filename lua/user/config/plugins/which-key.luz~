local wk = require("which-key");

return {
    "folke/which-key.nvim",

    event = "VimEnter",

    opts = {
        plugins = {
            preset = "classic",

            -- Delay before showing the popup. Can be a number or a function that returns a number.
            delay = function(ctx)
                return ctx.plugin and 0 or 200
            end,

            filter = function(mapping)
                -- example to exclude mappings without a description
                -- return mapping.desc and mapping.desc ~= ""
                return true
            end,

            --- You can add any mappings here, or use `require('which-key').add()` later
            spec = {},

            -- show a warning when issues were detected with your mappings
            notify = true,

            -- Which-key automatically sets up triggers for your mappings.
            -- But you can disable this and setup the triggers manually.
            -- Check the docs for more info.
            triggers = {
                { "<auto>", mode = "nxso" },
            },

            -- Start hidden and wait for a key to be pressed before showing the popup
            -- Only used by enabled xo mapping modes.
            defer = function(ctx)
                return ctx.mode == "V" or ctx.mode == "<C-V>"
            end,

            plugins = {
                -- shows a list of your marks on ' and `
                marks = true,

                -- shows your registers on " in NORMAL or <C-r> in INSERT mode
                -- the presets plugin, adds help for a bunch of default keybindings in Neovim
                -- No actual key bindings are created
                registers = true,

                spelling = {
                    -- enabling this will show WhichKey when pressing z= to select spelling suggestions
                    enabled = true,

                    -- how many suggestions should be shown in the list?
                    suggestions = 20,
                },

                presets = {
                    operators = true,     -- adds help for operators like d, y, ...
                    motions = false,      -- adds help for motions
                    text_objects = false, -- help for text objects triggered after entering an operator
                    windows = false,      -- default bindings on <c-w>
                    nav = false,          -- misc bindings to work with windows
                    z = false,            -- bindings for folds, spelling and others prefixed with z
                    g = false,            -- bindings for prefixed with g
                },
            },

            win = {
                -- don't allow the popup to overlap with the cursor
                no_overlap = true,
                -- width = 1,
                -- height = { min = 4, max = 25 },
                -- col = 0,
                -- row = math.huge,
                -- border = "none",
                padding = { 1, 2 }, -- extra window padding [top/bottom, right/left]
                title = true,
                title_pos = "center",
                zindex = 1000,
                -- Additional vim.wo and vim.bo options
                bo = {},
                wo = {
                    -- winblend = 10, -- value between 0-100 0 for fully opaque and 100 for fully transparent
                },
            },

            layout = {
                width = { min = 20 }, -- min and max width of the columns
                spacing = 3,          -- spacing between columns
            },

            keys = {
                scroll_down = "<c-d>", -- binding to scroll down inside the popup
                scroll_up = "<c-u>",   -- binding to scroll up inside the popup
            },

            --- Mappings are sorted using configured sorters and natural sort of the keys
            --- Available sorters:
            --- * local: buffer-local mappings first
            --- * order: order of the items (Used by plugins like marks / registers)
            --- * group: groups last
            --- * alphanum: alpha-numerical first
            --- * mod: special modifier keys last
            --- * manual: the order the mappings were added
            --- * case: lower-case first
            sort = { "local", "order", "group", "alphanum", "mod" },

            expand = 0, -- expand groups when <= n mappings

            -- expand = function(node)
            --   return not node.desc -- expand all nodes without a description
            -- end,
            -- Functions/Lua Patterns for formatting the labels
            replace = {
                key = {
                    function(key)
                        return require("which-key.view").format(key)
                    end,
                    -- { "<Space>", "SPC" },
                },
                desc = {
                    { "<Plug>%(?(.*)%)?", "%1" },
                    { "^%+",              "" },
                    { "<[cC]md>",         "" },
                    { "<[cC][rR]>",       "" },
                    { "<[sS]ilent>",      "" },
                    { "^lua%s+",          "" },
                    { "^call%s+",         "" },
                    { "^:%s*",            "" },
                },
            },

            icons = {
                breadcrumb = "»", -- symbol used in the command line area that shows your active key combo
                separator = "¿", -- symbol used between a key and it's label
                group = "+", -- symbol prepended to a group
                ellipsis = "\u2026",
                -- set to false to disable all mapping icons,
                -- both those explicitly added in a mapping
                -- and those from rules
                mappings = true,
                --- See `lua/which-key/icons.lua` for more details
                --- Set to `false` to disable keymap icons from rules
                ---@type wk.IconRule[]|false
                rules = {},
                -- use the highlights from mini.icons
                -- When `false`, it will use `WhichKeyIcon` instead
                colors = true,
                -- used by key format
                keys = {
                    Up = "\uf062 ",
                    Down = "\uf063 ",
                    Left = "\uf060 ",
                    Right = "\uf061 ",
                    C = "\U000f0634 ",
                    M = "\U000f0635 ",
                    D = "\U000f0633 ",
                    S = "\U000f0636 ",
                    CR = "\U000f0311 ",
                    Esc = "\U000f12b7 ",
                    ScrollWheelDown = "\U000f1550 ",
                    ScrollWheelUp = "\U000f1551 ",
                    NL = "\U000f0311 ",
                    BS = "\U000f006e",
                    Space = "\U000f1050 ",
                    Tab = "\U000f0312 ",
                    F1 = "\U000f12ab",
                    F2 = "\U000f12ac",
                    F3 = "\U000f12ad",
                    F4 = "\U000f12ae",
                    F5 = "\U000f12af",
                    F6 = "\U000f12b0",
                    F7 = "\U000f12b1",
                    F8 = "\U000f12b2",
                    F9 = "\U000f12b3",
                    F10 = "\U000f12b4",
                    F11 = "\U000f12b5",
                    F12 = "\U000f12b6",
                },
            },
            show_help = true, -- show a help message in the command line for using WhichKey
            show_keys = true, -- show the currently pressed key and its label as a message in the command line
            -- disable WhichKey for certain buf types and file types.
            disable = {
                ft = {},
                bt = {},
            },
            debug = false, -- enable wk.log in the current directory
        },
    }
}
